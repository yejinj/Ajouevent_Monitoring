apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: ajouevent
data:
  application.properties: |
    spring.datasource.url=jdbc:mysql://mysql-service:3306/ajouevent
    spring.datasource.username=ajouevent
    spring.datasource.password=ajouevent123
    spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
    
    spring.jpa.hibernate.ddl-auto=update
    spring.jpa.show-sql=true
    spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
    
    spring.redis.host=redis-service
    spring.redis.port=6379
    
    server.port=8080
    logging.level.org.springframework.web=DEBUG
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: ajouevent
spec:
  selector:
    app: backend
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: ajouevent
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: ajouevent_be:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "production"
        - name: MYSQL_HOST
          value: "mysql-service"
        - name: REDIS_HOST
          value: "redis-service"
        volumeMounts:
        - name: backend-config
          mountPath: /app/application.properties
          subPath: application.properties
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: backend-config
        configMap:
          name: backend-config
